name: Android Appium Tests Demo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-android:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Java
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      # Setup Node.js (required for Appium)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install Appium + drivers
      - name: Install Appium
        run: |
          npm install -g appium@next
          appium driver install uiautomator2
          appium --version

      - name: Install system image & create emulator
        run: |
          echo "y" | sdkmanager --install "system-images;android-36;default;x86_64"
          avdmanager create avd -n testEmulator -k "system-images;android-36;default;x86_64" -d "Nexus 6"

      - name: Start Emulator
        run: |
         nohup emulator -avd testEmulator -no-window -noaudio -no-boot-anim -gpu swiftshader_indirect &
         adb wait-for-device
         until [[ "$(adb shell getprop sys.boot_completed)" == "1" ]]; do
          echo "⏳ Waiting for emulator to boot..."
         sleep 5
         done
         echo "✅ Emulator is ready!"
         echo "deviceName=Nexus 6" >> $GITHUB_ENV   
      
      # 🔍 List connected devices (debugging step)
      - name: List available emulators/devices
        run: |
          echo "⏳ Waiting for emulator to boot..."
          adb wait-for-device
          # Extra wait to ensure boot complete
          boot_completed=""
          while [ -z "$boot_completed" ] || [ "$boot_completed" != "1" ]; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            sleep 2
          done
          echo "✅ Emulator boot completed!"
          
          echo "📱 Connected devices:"
          adb devices -l

          echo "📱 Device Model:"
          adb shell getprop ro.product.model

          echo "📱 Android Version:"
          adb shell getprop ro.build.version.release

      # Start Appium server in background
      - name: Start Appium Server
        run: |
          nohup appium > appium.log 2>&1 &

      # Build & Run Tests
      - name: Run Tests with Maven
        run: |
          mvn clean test -DdeviceName=${{ steps.emulator.outputs.deviceName }}

      # Upload TestNG Reports
      - name: Archive TestNG Reports
        uses: actions/upload-artifact@v4
        with:
          name: testng-reports
          path: test-output/
      # Upload Extent Reports
      - name: Archive Extent Reports
        run: |
          LATEST_REPORT_DIR=$(ls -td ReportGenerator/*/ | head -1)
          echo "Latest report directory: $LATEST_REPORT_DIR"
          tar -czf extent-report.tar.gz -C "$LATEST_REPORT_DIR" .
        shell: bash

      - name: Upload Extent Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: extent-report
          path: extent-report.tar.gz
