name: Android Appium Tests Demo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-android:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Java
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      # Setup Node.js (required for Appium)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install Appium + drivers
      - name: Install Appium
        run: |
          npm install -g appium@next
          appium driver install uiautomator2
          appium --version

       # Start Appium server in background
      - name: Start Appium Server
        run: |
          nohup appium > appium.log 2>&1 &

      # Setup Android Emulator
      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: default
          arch: x86_64
          profile: Nexus 6
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          script: |
            adb wait-for-device
            echo "📱 Connected devices:"
            adb devices -l
          
            echo "📱 Connected devices:"
            adb devices -l

            echo "📱 Device Model:"
            adb shell getprop ro.product.model

            echo "📱 Android Version:"
            adb shell getprop ro.build.version.release
            
            boot_completed=""
            until [[ "$boot_completed" == "1" ]]; do
              boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
              echo "⏳ Waiting for emulator boot..."
              sleep 5
            done
            echo "✅ Emulator boot completed"
            # Get device name from adb
            DEVICE_NAME=$(adb shell getprop ro.product.model | tr -d '\r')
            echo "✅ Emulator is ready! Device: $DEVICE_NAME"
            # Set as workflow output
            echo "deviceName=$DEVICE_NAME" >> $GITHUB_OUTPUT
            echo "Running tests on device: $DEVICE_NAME"
            mvn clean test -DdeviceName="emulator-5554"

      # Upload TestNG Reports
      - name: Archive TestNG Reports
        uses: actions/upload-artifact@v4
        with:
          name: testng-reports
          path: test-output/
      # Upload Extent Reports
      - name: Archive Extent Reports
        run: |
          LATEST_REPORT_DIR=$(ls -td ReportGenerator/*/ | head -1)
          echo "Latest report directory: $LATEST_REPORT_DIR"
          tar -czf extent-report.tar.gz -C "$LATEST_REPORT_DIR" .
        shell: bash

      - name: Upload Extent Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: extent-report
          path: extent-report.tar.gz
